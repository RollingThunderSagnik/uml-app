.App{
  display: flex;
  flex-direction: column;
}
.rendiv {
  /* background-image: url('assets/charu1.jpg'); */
  background-color: #fff;
  border: 2px dashed #ccc;
  border-radius: 20px;
  /* background : #eee; */
  position: relative;
  /* // backgroundImage: "url('./assets/charu1.jpg')", */
  /* min-height: 100vh; */
  /* transform: scale(0.7,0.7); */
  min-height: 200px;
  min-width: 200px;
  display:flex;
  justify-content: center;
  align-items: center;
  align-self: center;
  justify-self: center;
  padding: 0px;
  margin-bottom: 100px;
}
.rendiv canvas{
  transform: scale(0.7,0.7);
  margin: 0px;
}

#upload{
  width: 100%;
  /* background: #aaa; */
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 100px 0px;
}

#drop-area {
  border: 2px dashed #ccc;
  border-radius: 20px;
  width: 480px;
  font-family: sans-serif;
  /* position: relative; */
  /* left: 50%; */

  /* margin: 100px auto; */
  padding: 20px;
}
#drop-area.highlight {
  border-color: purple;
}
p {
  margin-top: 0;
}
.my-form {
  margin-bottom: 10px;
}
#gallery {
  margin-top: 10px;
}
#gallery img {
  width: 150px;
  margin-bottom: 10px;
  margin-right: 10px;
  vertical-align: middle;
}
.button {
  display: inline-block;
  padding: 10px;
  cursor: pointer;
  border-radius: 5px;
  margin-top: 2px;
  font-size: large;
  text-align: center;
}
label.button{
  border: 2px solid #3c40c6;
  background: #d7d9f4;
  color: #3c40c6;
}
label.button:hover{
  background: #3c40c6;
  color: #fff;
}
button.button{
  border: 2px solid#ff3f34;
  background:#ffcfcc;
  color: #ff3f34;
}
button.button:hover{
  background: #ff3f34;
  color: #fff;
}

.button:hover {
  background: #ddd;
}
#fileElem {
  display: none;
}

.file {
  display: inline-block;
  padding: 8px;
  margin: 2px;
  background: #ccc;
  cursor: pointer;
  border-radius: 5px;
  border: 1px solid #ccc;
  color: #333;
}

/* #rendiv canvas{
  transform: scale(0.7,0.7)
} */

/* handleFiles(event)
{
  // event.preventDefault();

  this.fileInput.current.files.forEach( (f) => {
    console.log(f.name);
  });
}

handleSubmit(event) {
  event.preventDefault();
  this.fileInput.current.files.forEach( (f) => {
    this.showFile(f);
  });
}

render = () => {

  return (
  <div id="drop-area">
    <form className="my-form" onSubmit={this.handleSubmit}>
      <input type="file" id="fileElem" multiple accept=".java" 
          ref={this.fileInput} 
          onChange={this.handleFiles}/>
      <label className="button" htmlFor="fileElem">Select some files</label>
      <br/>
      <button className="button" type="submit">Submit</button>
    </form>
  </div> */